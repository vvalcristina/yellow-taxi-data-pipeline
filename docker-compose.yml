services:
  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
  
  minio-mc:
    image: minio/mc:latest
    container_name: minio-mc
    depends_on:
      - minio
    entrypoint: |
      sh -c "
      sleep 10 &&
      mc alias set myminio http://minio:9000 minioadmin minioadmin123 &&
      mc mb myminio/yellow-taxi-files &&
      mc mb myminio/prd-yellow-taxi-table
      "

  postgres-airflow:
    image: postgres:13
    container_name: postgres-airflow
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  airflow:
    build:
      context: .
      dockerfile: config_airflow/Dockerfile
    container_name: airflow
    depends_on:
      - minio
      - postgres-airflow
      - spark-master
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres-airflow/airflow
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      AIRFLOW__CORE__PLUGINS_FOLDER: /opt/airflow/plugins
      AIRFLOW__LOGGING__LOGGING_LEVEL: INFO
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin123
    command: ['airflow', 'standalone']
    ports:
      - "8080:8080"
    volumes:
      - ./airflow/dags:/opt/airflow/dags  
  
  spark-master:
    image: bitnami/spark:3.4.1
    container_name: spark-master
    environment:
      SPARK_MODE: master
    ports:
      - "7077:7077"
      - "8081:8081"
    volumes:
      - /local/tmp:/tmp

  spark-worker:
    image: bitnami/spark:3.4.1
    container_name: spark-worker
    environment:
      SPARK_MODE: worker
      SPARK_MASTER_URL: spark://spark-master:7077
    depends_on:
      - spark-master
    volumes:
      - /local/tmp:/tmp

  spark:
    build:
      context: .
      dockerfile: config_spark/Dockerfile
    container_name: spark
    environment:
      SPARK_LOCAL_DIRS: /tmp
      SPARK_PUBLIC_DNS: localhost
      SPARK_CONF_DIR: /conf
      HADOOP_CONF_DIR: /conf
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin123
      FS_S3A_ACCESS_KEY: minioadmin
      FS_S3A_SECRET_KEY: minioadmin123
      FS_S3A_ENDPOINT: http://minio:9000
    volumes:
      - ./spark/conf:/conf
      - ./spark/jars:/opt/spark/jars
      - /local/tmp:/tmp
    ports:
      - "4040:4040"

volumes:
  minio-data:
  postgres_data:
  spark_master: